# --- PATH & basics ---
export PATH="$HOME/bin:/usr/local/bin:$HOME/.local/bin:$HOME/scripts:$HOME/.cargo/bin:$PATH"
export EDITOR='nvim'; export FLASK_ENV=development
setopt noincappendhistory nosharehistory

# --- Powerlevel10k instant prompt (if present) ---
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# --- Fast completion (cache on Linux FS) ---
: ${XDG_CACHE_HOME:=$HOME/.cache}
mkdir -p "$XDG_CACHE_HOME/zsh"
# ensure fpath additions happen BEFORE compinit
fpath+=${ZSH_CUSTOM:-${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions/src

autoload -Uz compinit
compinit -C -d "$XDG_CACHE_HOME/zsh/zcompdump-$ZSH_VERSION"
zstyle ':completion::complete:*' use-cache on
zstyle ':completion:*' cache-path "$XDG_CACHE_HOME/zsh/compcache"

# --- Prompt (p10k if configured) ---
[[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh || PROMPT='%n@%m:%~ %# '

# --- Antidote plugin manager (single framework) ---
# (remove ALL oh-my-zsh sourcing)
source ~/.antidote/antidote.zsh
# Minimal, fast bundles; add more later as needed
antidote bundle <<'BUNDLES'
zsh-users/zsh-completions
zsh-users/zsh-autosuggestions
zsh-users/zsh-syntax-highlighting
BUNDLES
antidote load

# --- FZF (keybindings only; safe on WSL) ---
[[ -f /usr/share/doc/fzf/examples/key-bindings.zsh ]] && source /usr/share/doc/fzf/examples/key-bindings.zsh
export FZF_DEFAULT_OPTS="--height 40% --layout=reverse --border --multi --inline-info"
export FZF_COMPLETION_TRIGGER='**'

# --- Aliases (keep light) ---
alias zshrc="nvim ~/.zshrc"; alias c="clear"; alias n="nvim"
if [[ "$OSTYPE" != "darwin"* ]]; then
  alias open="explorer.exe"; alias pbcopy="clip.exe"; alias rm="rm -I"
fi
export LS_COLORS=$LS_COLORS:'ow=1;34:';

# --- Go ---
export GOPATH="$HOME/go"
export PATH="$PATH:/usr/local/go/bin:$GOPATH/bin"

# --- Pyenv (optional; keep) ---
export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"
export PYENV_VERSION="3.12"

# --- zoxide ---
eval "$(zoxide init zsh)"

# --- NVM: true lazy load (no OMZ nvm plugin) ---
export NVM_DIR="$HOME/.nvm"
export NVM_AUTO_USE=0
_nvm_lazy_load(){ unset -f nvm node npm npx; [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"; }
nvm(){  _nvm_lazy_load; nvm "$@"; }
node(){ _nvm_lazy_load; command node "$@"; }
npm(){  _nvm_lazy_load; command npm "$@"; }
npx(){  _nvm_lazy_load; command npx "$@"; }

# --- Optional: re-enable profiling to verify wins ---
# zmodload zsh/zprof
# zprof

