set shell := ["fish", "-c"]

# serve flask (without threads) on port 5010. On python filechange, will reload server. debugpy listening on port 5678. output stdout to output.log
run-dev:
  fd -e py | entr -r venv/bin/python -m debugpy --listen localhost:5678 -m flask run execution:create_app() --host=0.0.0.0 --port=5010 --no-reload | tee -a output.log

run-dev-no-threads:
  fd -e py | entr -r venv/bin/python -m debugpy --listen localhost:5678 -m flask run execution:create_app() --host=0.0.0.0 --port=5010 --without-threads --no-reload | tee -a output.log


# watch and run unit tests
test-unit:
  fd -e py | entr -r venv/bin/python -m pytest -vv --disable-warnings tests/unit

# watch and run integration tests
test-int:
  fd -e py | entr -r venv/bin/python -m pytest -vv --disable-warnings tests/integration

# update snapshots
test-snap-update:
  venv/bin/python -m pytest -vv --disable-warnings tests/integration --snapshot-update

# watch and run all tests
test-all:
  fd -e py | entr -r venv/bin/python -m pytest -vv --disable-warnings tests/

# Listen for debugpy on port 5678
listen-debugpy:
  watch -c -n 2 "sudo lsof -i -P -n | rg 5678"

# Watch for debugpy processes
watch-debugpy:
  watch --color -n 2 "ps aux | rg -inH [d]ebugpy"

darker:
  ~/python_envs/nvim/bin/darker --isort --skip-string-normalization -l 120 .

blackd:
  ~/python_envs/nvim/bin/blackd --bind-host 127.0.0.1

run-app-context module:
  venv/bin/python execution/scripts/run_with_app_context.py {{module}}
