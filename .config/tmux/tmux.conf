#############################
########## Bindings
#############################
unbind C-b
set -g prefix C-a
bind C-a send-prefix

unbind .
bind . source-file ~/.config/tmux/tmux.conf \; display "Reloaded ~/.tmux.conf"

bind R refresh-client

# Better list keys
bind-key ? 'list-keys'

#Splitting panes
unbind % # Split vertically
unbind '"' # Split horizontally
bind-key C-s split-window -h -c "#{pane_current_path}"
bind-key C-x split-window -v -c "#{pane_current_path}"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
bind-key -n 'C-q' if-shell "$is_vim" 'send-keys C-q' 'kill-pane'

# Gain back Clear Screen
bind C-l send-keys 'C-l'

bind-key -r Down resize-pane -D 10
bind-key -r Up resize-pane -U 10
bind-key -r Left resize-pane -L 10
bind-key -r Right resize-pane -R 12
bind-key = select-layout resize-pane

# Quickly cycle through clients
bind-key -r C-n switch-client -n
bind-key -r C-p switch-client -p
bind-key l switch-client -l

# easier and faster switching between next/prev window
# bind-key -r C-p previous-window
# bind-key -r C-n next-window
bind-key -n S-Left previous-window
bind-key -n S-Right next-window

# Move Windows
bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1

# Join pane into another window
bind j choose-window 'join-pane -h -s "%%"'
bind J choose-window 'join-pane -s "%%"'

# Prefix + / to search
bind-key / copy-mode \; send-key ?

# Copy mode
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line
bind-key -T copy-mode-vi Y send-keys -X copy-end-of-line
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi C-v send -X rectangle-toggle
bind C-v paste-buffer

#############################
########## Settings
#############################

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

setw -g mode-keys vi

set -g history-limit 10000

set -g mouse on

set -g xterm-keys on

set-window-option -g mode-keys vi

set -s escape-time 0

set-option -sa terminal-overrides ",xterm*:Tc"

set-option -g focus-events on

# Visual Activity Monitoring between windows
# setw -g monitor-activity on
# set -g visual-activity off

# Show tmux positions in titles
set -g set-titles on

# statusbar
set-option -g status on
set-option -g status-interval 2
set-option -g status-left-length 60
set-option -g status-right-length 90

# Default shell
set-option -g default-shell /usr/local/bin/fish

# Set the default terminal mode to 256color mode
set -g default-terminal "screen-256color"
# Needs this line also to overrides the default color for neovim
# set-option -ga terminal-overrides ",*256color*:Tc"

# Pressing PREFIX [ places us in Copy mode. We can then use our movement keys to move our cursor around the screen. 

#############################
########## Styles
#############################

# Start window and pane indices at 1.
set -g base-index 1
set -g pane-base-index 0

# Length of tmux status line
set -g status-left-length 30
set -g status-right-length 150

set-option -g status "on"

# Default statusbar color
set-option -g status-style bg=colour237,fg=colour223 # bg=bg1, fg=fg1

# Default window title colors
set-window-option -g window-status-style bg=colour214,fg=colour237 # bg=yellow, fg=bg1

# Default window with an activity alert
set-window-option -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3

# Active window title colors
set-window-option -g window-status-current-style bg=red,fg=colour237 # fg=bg1

# Set active pane border color
set-option -g pane-active-border-style fg=colour214

# Set inactive pane border color
set-option -g pane-border-style fg=colour239

# Message info
set-option -g message-style bg=colour239,fg=colour223 # bg=bg2, fg=fg1

# Writing commands inactive
set-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1

# Pane number display
set-option -g display-panes-active-colour colour1 #fg2
set-option -g display-panes-colour colour237 #bg1

# Clock
set-window-option -g clock-mode-colour colour109 #blue

# Bell
set-window-option -g window-status-bell-style bg=colour167,fg=colour235 # bg=red, fg=bg

set-option -g status-left "\
#{tmux_mode_indicator}\
#[fg=colour7, bg=colour241] ❐ #S \
#[fg=colour241, bg=colour237]#{?window_zoomed_flag, ,}"

set-option -g status-right "\
#[fg=colour246, bg=colour237]  %b %d '%y\
#[fg=colour109]  %H:%M \
#[fg=colour248, bg=colour239]"

set-window-option -g window-status-current-format "\
#[fg=colour237, bg=colour214]\
#[fg=colour239, bg=colour214] #I \
#[fg=colour239, bg=colour214, bold] #W \
#{?window_flags,#{window_flags},} \
#[fg=colour214, bg=colour237]"

set-window-option -g window-status-format "\
#[fg=colour237,bg=colour239,noitalics]\
#[fg=colour223,bg=colour239] #I \
#[fg=colour223, bg=colour239] #W \
#{?window_flags,#{window_flags},} \
#[fg=colour239, bg=colour237]"

#############################
########## Plugins (https://github.com/tmux-plugins/tpm)
#############################

# Hit prefix + I to fetch plugins and source it

set -g @plugin 'tmux-plugins/tpm'

# Persists tmux environment across system restarts. 
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'

# Displays prompt indicating currently active Tmux mode
set -g @plugin 'MunifTanjim/tmux-mode-indicator'
set -g @mode_indicator_prefix_mode_style 'bg=colour167'
set -g @mode_indicator_copy_mode_style 'bg=#957FB8'
set -g @mode_indicator_empty_mode_style 'fg=colour7,bg=colour241'
set -g @mode_indicator_prefix_prompt ' P '
set -g @mode_indicator_copy_prompt ' C '
set -g @mode_indicator_sync_prompt ' S '
set -g @mode_indicator_empty_prompt ' T '

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
